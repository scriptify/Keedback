module.exports = `
  CREATE TABLE IF NOT EXISTS Version (
    VID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    version VARCHAR(30) NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL
  );

  CREATE TABLE IF NOT EXISTS User (
    UID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(20) NOT NULL UNIQUE,
    pwHash BINARY(60) NOT NULL,
    isAdmin BOOLEAN DEFAULT FALSE
  );

  CREATE TABLE IF NOT EXISTS AccessKey (
    KID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    value CHAR(36) NOT NULL,
    takenBy INT,
    FOREIGN KEY(takenBy) REFERENCES User(UID)
  );

  CREATE TABLE IF NOT EXISTS KeyManagement (
    KMID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    returnOnRegister INT DEFAULT 2,
    maxKeys INT DEFAULT 1000
  );

  INSERT INTO KeyManagement (returnOnRegister)
  SELECT 2
  WHERE NOT EXISTS (SELECT * FROM KeyManagement);

  CREATE TABLE IF NOT EXISTS Feature (
    FID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255),
    description TEXT NOT NULL
  );

  CREATE TABLE IF NOT EXISTS DevelopmentFeature (
    DFID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    FID INT NOT NULL,
    FOREIGN KEY(FID) REFERENCES Feature(FID) ON DELETE CASCADE
  );

  CREATE TABLE IF NOT EXISTS NewFeature (
    NFID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    FID INT NOT NULL,
    FOREIGN KEY(FID) REFERENCES Feature(FID) ON DELETE CASCADE
  );

  CREATE TABLE IF NOT EXISTS Vote (
    VID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    UID INT NOT NULL,
    NFID INT NOT NULL,
    FOREIGN KEY(UID) REFERENCES User(UID),
    FOREIGN KEY(NFID) REFERENCES NewFeature(NFID)
  );

  CREATE TABLE IF NOT EXISTS Feedback (
    FBID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    UID INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    userText TEXT NOT NULL,
    email VARCHAR(255),
    type INT NOT NULL,
    processed BOOLEAN DEFAULT FALSE,
    FOREIGN KEY(UID) REFERENCES User(UID)
  );

`;
